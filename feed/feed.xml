<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
	<title>Jonathan Schrack</title>
	<subtitle></subtitle>
	
	<link href="https://jmschrack.dev/feed/feed.xml" rel="self"/>
	<link href="https://jmschrack.dev/"/>
	<updated>2020-03-05T00:00:00-00:00</updated>
	<id></id>
	<author>
		<name>Jonathan Schrack</name>
		<email>jonathan.schrack@digitalprecept.com</email>
	</author>
	
	<entry>
		<title>Unity3D AMF-Importer</title>
		<link href="https://jmschrack.dev/posts/UnityAMFImporter/"/>
		<updated>2019-02-04T00:00:00-00:00</updated>
		<id>https://jmschrack.dev/posts/UnityAMFImporter/</id>
		<content type="html">&lt;h1 id=&quot;wip&quot;&gt;WIP &lt;a class=&quot;direct-link&quot; href=&quot;#wip&quot;&gt;#&lt;/a&gt;&lt;/h1&gt;
</content>
	</entry>
	
	<entry>
		<title>Mend</title>
		<link href="https://jmschrack.dev/posts/Mend/"/>
		<updated>2020-02-10T00:00:00-00:00</updated>
		<id>https://jmschrack.dev/posts/Mend/</id>
		<content type="html">&lt;h1 id=&quot;wip&quot;&gt;WIP &lt;a class=&quot;direct-link&quot; href=&quot;#wip&quot;&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;(Title picture)&lt;br&gt;
I am the main XR and Software Developer for Mend!&lt;/p&gt;
&lt;p&gt;The feature I&#39;m most proud of are the spatial dependent collision platforms.&lt;/p&gt;
&lt;h2 id=&quot;inspiration&quot;&gt;Inspiration &lt;a class=&quot;direct-link&quot; href=&quot;#inspiration&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;It&#39;s heavily inspired from Super Mario Galaxy&#39;s invisible platforms; these platforms are revealed within a radius of a torch. However, they platforms are always there regardless if you can see them or not.&lt;/p&gt;
&lt;h2 id=&quot;the-twist&quot;&gt;The Twist &lt;a class=&quot;direct-link&quot; href=&quot;#the-twist&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Justin Palmer, Mend&#39;s Game Designer:  &amp;quot;I really wish we could make the collisions operate the same way as the visuals.&amp;quot;&lt;br&gt;
Jonathan: &amp;quot;Give me an hour. I think can make it work.&amp;quot;&lt;/p&gt;
&lt;p&gt;The core aspect of this game is cooperative game play. The VR player can move boxes and reveal platforms for the non-VR player to use. However, you don&#39;t need the VR player if you know where the invisible platforms are.&lt;br&gt;
So instead of making them invisible, we make them cease to exist outside of the orb&#39;s range.  I then took it one step further, and devised a method of controlling collisions for partials views as well.&lt;br&gt;
Now the game really requires team work to complete!&lt;/p&gt;
&lt;h1 id=&quot;the-result&quot;&gt;The result &lt;a class=&quot;direct-link&quot; href=&quot;#the-result&quot;&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;(animated gif of it working)&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>An Idiot&#39;s Guide to running Eleventy on GitHub Pages.</title>
		<link href="https://jmschrack.dev/posts/SetupGuide/"/>
		<updated>2020-03-05T00:00:00-00:00</updated>
		<id>https://jmschrack.dev/posts/SetupGuide/</id>
		<content type="html">&lt;p&gt;When it comes to text tutorials, I prefer them overly verbose. So I&#39;m documenting my process of getting the Eleventy base blog for the next wandering programmer that might come by.&lt;br&gt;
I&#39;ve used Continuous Integation before, but never TravisCI. I&#39;ve used git and GitHub before, but never GitHub pages. And of course, I&#39;ve never used eleventy before now.&lt;br&gt;
The whole point of SSG is to enable you to just focus on the content of your website, and not the infrastructure. However, if you haven&#39;t used all of these components, guess what you&#39;re wasting time trying to figure out?&lt;br&gt;
So an &amp;quot;Idiot&#39;s Guide&amp;quot; is to enable anyone (not necessarily developers!) to do the bare minimum infrastructure set up in order to focus on the content.&lt;br&gt;
The only assumption is that you know commit&amp;amp;push to a git repo.&lt;/p&gt;
&lt;h2 id=&quot;what-is-this%3F&quot;&gt;What is this? &lt;a class=&quot;direct-link&quot; href=&quot;#what-is-this%3F&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Eleventy is a &amp;quot;Static Site Generator&amp;quot; that lets you type up pages in simple markdown, and then it generates all the html and CSS required.&lt;br&gt;
GitHub Pages will host static HTML websites based on a git repo.&lt;br&gt;
TravisCI will auto pull your latest code, build it, and deploy for you.&lt;br&gt;
All 3 of these together make for a straight forward website pipeline.&lt;/p&gt;
&lt;h2 id=&quot;get-node.js-(optional)&quot;&gt;Get Node.js (Optional) &lt;a class=&quot;direct-link&quot; href=&quot;#get-node.js-(optional)&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Eleventy uses JavaScript and runs on Node.js.  TravisCI will handle all of this for us, and so you don&#39;t have to install node.js yourself.&lt;br&gt;
However, it&#39;s a good idea to do this so you can rapidly test changes on your local computer before pushing them live.&lt;/p&gt;
&lt;p&gt;You can download an installer for Node.js from &lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;https://nodejs.org/en/download/&lt;/a&gt;. Let it do its thing.&lt;/p&gt;
&lt;h2 id=&quot;get-eleventy&quot;&gt;Get Eleventy &lt;a class=&quot;direct-link&quot; href=&quot;#get-eleventy&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;(From &lt;a href=&quot;https://www.11ty.dev/&quot;&gt;https://www.11ty.dev/&lt;/a&gt; )&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open up Windows Powershell (or command prompt).&lt;/li&gt;
&lt;li&gt;run &amp;quot;npm install -g @11ty/eleventy&amp;quot;  (without quotes)&lt;/li&gt;
&lt;li&gt;Go to &lt;a href=&quot;https://github.com/11ty/eleventy-base-blog&quot;&gt;https://github.com/11ty/eleventy-base-blog&lt;/a&gt; and choose &amp;quot;Use This Template&amp;quot; button. Name your repo whatever you want, or leave the default name.&lt;/li&gt;
&lt;li&gt;On your freshly created/cloned GitHub repository, create a new branch called &amp;quot;dev&amp;quot; (Or whatever you want, all your work will be done here.)  If you want to set this up for a specific repo instead of your &amp;quot;User page&amp;quot;, call the branch &amp;quot;gh-pages&amp;quot;, and skip to step 6.&lt;/li&gt;
&lt;li&gt;On your github repo&#39;s settings, change the default branch to &amp;quot;dev&amp;quot; and rename your repo to &lt;em&gt;username&lt;/em&gt;.github.io&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;set-up-travisci-to-publish-your-github-repo&quot;&gt;Set up TravisCI to publish your GitHub repo &lt;a class=&quot;direct-link&quot; href=&quot;#set-up-travisci-to-publish-your-github-repo&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ol start=&quot;6&quot;&gt;
&lt;li&gt;Go to &lt;a href=&quot;https://travis-ci.org/getting_started&quot;&gt;https://travis-ci.org/getting_started&lt;/a&gt; , sign in with github. If you&#39;re feeling lazy, just activate Travis for all repositories.&lt;/li&gt;
&lt;li&gt;On GitHub, go to your profile Settings&amp;gt;Developer Settings&amp;gt;Personal Access Tokens, and create a new personal access token for TravisCI with the &amp;quot;Repo&amp;quot; permissions. &lt;strong&gt;Copy the key!&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Go to TravisCI and navigate to your repository, and go to the settings for it. Create a new EnvironmentVariable called &amp;quot;GITHUB_TOKEN&amp;quot;, paste the Access Token you copied in here and click &amp;quot;Add&amp;quot;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;publish-your-page-for-the-first-time&quot;&gt;Publish your page for the first time &lt;a class=&quot;direct-link&quot; href=&quot;#publish-your-page-for-the-first-time&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ol start=&quot;9&quot;&gt;
&lt;li&gt;If you are not using the User page (i.e. you skipped step 5 above), just change the &amp;quot;pathprefix&amp;quot; in .travis.yml to point to your repo&#39;s name. Otherwise, edit your .travis.yml and change it to the following.:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;language: node_js
node_js:
  - 8
before_script:
  - npm install @11ty/eleventy -g
script: eleventy --pathprefix=&amp;quot;/&amp;quot;
deploy:
  local-dir: _site
  provider: pages
  skip-cleanup: true
  github-token: $GITHUB_TOKEN  # Set in travis-ci.org dashboard, marked secure
  keep-history: true
  target_branch: master
  on:
    branch: dev
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This tells TravisCI to pull from the dev branch, and deploy to the master branch.&lt;br&gt;
10. Commit and push your changes now. Go back to TravisCI and watch your build begin.&lt;br&gt;
11. Once Travis finishes, go to your &lt;a href=&quot;http://github.com/&quot;&gt;GitHub.com&lt;/a&gt; repo&#39;s settings, scroll down to find the &amp;quot;GitHub Pages&amp;quot; section. If everything worked, you&#39;ll be given a link that points to &lt;em&gt;username&lt;/em&gt;.github.io !&lt;/p&gt;
&lt;p&gt;The first time, I got an &amp;quot;Unknown Tag&amp;quot; error. I don&#39;t know what caused it, but doing a second build on Jenkins fixed it.&lt;/p&gt;
</content>
	</entry>
</feed>
